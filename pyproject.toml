[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "stock-probability-analyzer"
version = "1.0.0"
description = "A Python tool for analyzing the probability of consecutive up/down moves in stock prices based on historical data patterns"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Stock Analyzer Team" }
]
keywords = ["stocks", "trading", "probability", "finance", "analysis", "momentum"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    "yfinance>=0.2.28",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
stock-analyzer = "stock_probability_analyzer.main:main"
spa-scanner = "stock_probability_analyzer.scanner:scanner_mode"

[project.urls]
Homepage = "https://github.com/yourusername/stock-probability-analyzer"
Repository = "https://github.com/yourusername/stock-probability-analyzer"
Issues = "https://github.com/yourusername/stock-probability-analyzer/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/stock_probability_analyzer"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"